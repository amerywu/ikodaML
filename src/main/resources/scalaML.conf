scalaML {

    root
      {
          fsRoot ="hdfs://192.168.0.141"
          topDir="ikoda"
      }

    rawDataRoot {
        value = "/ikoda/_mlOutput"
    }
    libsvmProcessingRoot {
        value = "./ikoda/ml_data"
    }

    pipelineOutputRoot {
        value = "/home/jake/environment/spark-2.2.1-bin-hadoop2.7/ikoda/pipelineOutputRoot"
    }

    modelsRoot {
        value = "/ikoda/predmodels"
    }




    phraseAnalysis{
        codesSourceDir  = "/ikoda/humancoded"
        sourceFile  = "JOB_DATA_BY_DOCUMENT_ReducedAndJoined"
        trainingDataFile ="JobDescriptions_Master.csv"
        codedOutputFile  = "JobDescriptionsCodedClean.csv"
    }

    mlpcPredictByUrlModelName {
        value = "MLPCModel"
    }

    mlpcDataSchema {
        value = "CollegePrograms-ResultsByCategory"
    }

    keyspace{
        bydocument=fjd201808byjob
        bysentence=fjd201808bysentence
        collegeurlmodel=collegeurlmodel
    }




    streamingData {
        root = "/ikoda/streamedData"
        rawSparseNLP = "/ikoda/streamedData/rawSparseNLP"
        rawSparseSupplement ="/ikoda/streamedData/rawSparseNLPSupplement"
        training = "/ikoda/streamedData/trainingDataSets"
    }


    dataFileNames {
        jobBySentence = "output-jobs-150KPLUS-2018-02-11"
        jobByDocument = "output-jobs-10K-2018-02-05"
        redditBySentence = "trainingDataSets"
        redditByDocument = "trainingDataSets"
        collegeBySentence = "trainingDataSets"
        collegeByDocument = "trainingDataSets"
    }

    launchRoutine {
        value = "testRun"
        // "redditDocumentLevel"
        // "redditSentenceLevel"
        // "jobsDocumentLevel"
        // "jobsSentenceLevel"
        // "phraseAnalysisKmeans"
        //"phraseAnalysisLDA"
        //"phraseCoding"
    }


}